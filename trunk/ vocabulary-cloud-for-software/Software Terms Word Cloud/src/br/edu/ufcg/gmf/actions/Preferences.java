package br.edu.ufcg.gmf.actions;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Preferences.java
 *
 * Created on 13/07/2010, 10:48:01
 */

import javax.swing.JCheckBox;

/**
 *
 * @author Samuel
 */
public class Preferences extends javax.swing.JFrame {
	private static final long serialVersionUID = 1L;
	private JCheckBox[][] checkBoxesTwoDimensionalList;
	private static boolean userPreferencesReceived;

    /** Creates new form Preferences */
    public Preferences(PackageExplorerHierarchy type) {
        initComponents();
        loadCheckBoxesTwoDimensionalList();

        if (type.equals(PackageExplorerHierarchy.I_PACKAGE_FRAGMENT_ROOT)) {
            deselectAndDeactivateCheckBoxes(PackageExplorerHierarchy.I_PACKAGE_FRAGMENT_ROOT);
        } else if (type.equals(PackageExplorerHierarchy.I_PACKAGE_FRAGMENT)) {
            deselectAndDeactivateCheckBoxes(PackageExplorerHierarchy.I_PACKAGE_FRAGMENT);
        } else if (type.equals(PackageExplorerHierarchy.I_COMPILATION_UNIT) || type.equals(PackageExplorerHierarchy.SOURCE_TYPE)) {
            deselectAndDeactivateCheckBoxes(PackageExplorerHierarchy.I_COMPILATION_UNIT);
        } else if (type.equals(PackageExplorerHierarchy.SOURCE_METHOD)) {
            deselectAndDeactivateCheckBoxes(PackageExplorerHierarchy.SOURCE_METHOD);
        }
    }

    public static boolean getUserPreferencesReceived() {
    	return userPreferencesReceived;
    }
    
    private void deselectAndDeactivateCheckBoxes(PackageExplorerHierarchy type) {
        for (int indice = 0; indice <= type.ordinal(); indice++) {
            for (JCheckBox checkBox : checkBoxesTwoDimensionalList[indice]) {
                checkBox.setSelected(false);
                checkBox.setEnabled(false);
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        preferencesLabel = new javax.swing.JLabel();
        projectCheckBox = new javax.swing.JCheckBox();
        packagesFoldersCheckBox = new javax.swing.JCheckBox();
        packagesCheckBox = new javax.swing.JCheckBox();
        classCheckBox = new javax.swing.JCheckBox();
        superClassCheckBox = new javax.swing.JCheckBox();
        interfacesCheckBox = new javax.swing.JCheckBox();
        methodsCheckBox = new javax.swing.JCheckBox();
        parametersCheckBox = new javax.swing.JCheckBox();
        generateWordCloudButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form"); // NOI18N

        preferencesLabel.setName("preferencesLabel"); // NOI18N
        preferencesLabel.setText("Preferências");
        
        projectCheckBox.setName("projectCheckBox"); // NOI18N
        projectCheckBox.setText("Projeto");

        packagesFoldersCheckBox.setName("packagesFoldersCheckBox"); // NOI18N
        packagesFoldersCheckBox.setText("Pastas de pacotes");

        packagesCheckBox.setName("packagesCheckBox"); // NOI18N
        packagesCheckBox.setText("Pacotes");
        
        classCheckBox.setName("classCheckBox"); // NOI18N
        classCheckBox.setText("Classes");

        superClassCheckBox.setName("superClassCheckBox"); // NOI18N
        superClassCheckBox.setText("Superclasse");

        interfacesCheckBox.setName("interfacesCheckBox"); // NOI18N
        interfacesCheckBox.setText("Interfaces");

        methodsCheckBox.setName("methodsCheckBox"); // NOI18N
        methodsCheckBox.setText("Métodos");

        parametersCheckBox.setName("parametersCheckBox"); // NOI18N
        parametersCheckBox.setText("Parâmetros");

        generateWordCloudButton.setName("generateWordCloudButton"); // NOI18N
        generateWordCloudButton.setText("Gerar Word Cloud");
        generateWordCloudButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	generateWordCloudActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(projectCheckBox))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(packagesFoldersCheckBox))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(packagesCheckBox))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(classCheckBox))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(superClassCheckBox))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(interfacesCheckBox))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(methodsCheckBox))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(parametersCheckBox))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(generateWordCloudButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(preferencesLabel)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(preferencesLabel)
                .addGap(18, 18, 18)
                .addComponent(projectCheckBox)
                .addComponent(packagesFoldersCheckBox)
                .addComponent(packagesCheckBox)
                .addComponent(classCheckBox)
                .addComponent(superClassCheckBox)
                .addComponent(interfacesCheckBox)
                .addComponent(methodsCheckBox)
                .addComponent(parametersCheckBox)
                .addGap(18, 18, 18)
                .addComponent(generateWordCloudButton)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void generateWordCloudActionPerformed(java.awt.event.ActionEvent evt) {
        TermsCloudGenerator.setIncludeProject(projectCheckBox.isSelected());
        TermsCloudGenerator.setIncludePackagesFolders(packagesFoldersCheckBox.isSelected());
        TermsCloudGenerator.setIncludePackages(packagesCheckBox.isSelected());
        TermsCloudGenerator.setIncludeClass(classCheckBox.isSelected());
        TermsCloudGenerator.setIncludeSuperClass(superClassCheckBox.isSelected());
        TermsCloudGenerator.setIncludeInterfaces(interfacesCheckBox.isSelected());
        TermsCloudGenerator.setIncludeMethods(methodsCheckBox.isSelected());
        TermsCloudGenerator.setIncludeParameters(parametersCheckBox.isSelected());
        this.dispose();
        userPreferencesReceived = true;
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        run(PackageExplorerHierarchy.I_JAVA_PROJECT);
    }

    public static void run(final PackageExplorerHierarchy type) {
    	userPreferencesReceived = false;
    	
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Preferences(type).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton generateWordCloudButton;
    private javax.swing.JCheckBox projectCheckBox;
    private javax.swing.JCheckBox packagesFoldersCheckBox;
    private javax.swing.JCheckBox packagesCheckBox;
    private javax.swing.JCheckBox classCheckBox;
    private javax.swing.JCheckBox superClassCheckBox;
    private javax.swing.JCheckBox interfacesCheckBox;
    private javax.swing.JCheckBox methodsCheckBox;
    private javax.swing.JCheckBox parametersCheckBox;
    private javax.swing.JLabel preferencesLabel;
    // End of variables declaration

    private void loadCheckBoxesTwoDimensionalList() {
        JCheckBox[][] temporaryTwoDimensionalList = {{projectCheckBox}, {packagesFoldersCheckBox}, {packagesCheckBox}, {classCheckBox, superClassCheckBox, interfacesCheckBox}, {methodsCheckBox, parametersCheckBox}};
        checkBoxesTwoDimensionalList = temporaryTwoDimensionalList.clone();

        for (JCheckBox[] checkBoxList : checkBoxesTwoDimensionalList) {
            for (JCheckBox checkBox : checkBoxList) {
                checkBox.setSelected(true);
            }
        }
    }
}
